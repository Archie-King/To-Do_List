openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: http://127.0.0.1:9876
  description: Generated server url
paths:
  /api/tasks/{id}:
    get:
      tags:
      - task-controller
      summary: Get task by id
      description: Get details by task ID
      operationId: getTaskById
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Task"
    put:
      tags:
      - task-controller
      summary: Update task
      description: Update the task by task ID
      operationId: updateTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Task"
    delete:
      tags:
      - task-controller
      summary: Delete task
      description: Delete the task by task ID
      operationId: deleteTask
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/users/register:
    post:
      tags:
      - user-controller
      summary: User registration
      description: Register a new user
      operationId: register
      parameters:
      - name: username
        in: query
        required: true
        schema:
          type: string
      - name: password
        in: query
        required: true
        schema:
          type: string
      - name: email
        in: query
        required: true
        schema:
          type: string
      - name: roles
        in: query
        required: false
        schema:
          type: string
          default: USER
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /api/tasks:
    get:
      tags:
      - task-controller
      summary: Get all tasks
      description: Return a list of all tasks
      operationId: getAllTasks
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
    post:
      tags:
      - task-controller
      summary: Create task
      description: Create new task based on the request body
      operationId: createTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/Task"
  /api/users/{username}:
    get:
      tags:
      - user-controller
      summary: Get user info
      description: Get user information by username
      operationId: getUser
      parameters:
      - name: username
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/User"
components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        description:
          type: string
        priority:
          type: integer
          format: int32
        completed:
          type: boolean
        createdAt:
          type: string
          format: date-time
        dueDate:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        password:
          type: string
        email:
          type: string
        roles:
          type: string
